(ns d23)

;#############
;#...........#
;###A#C#B#D###
;  #B#A#D#C#
;  #########

; step 1 D: 2 steps C: 3 steps
;#############
;#.......D.C.#
;###A#C#B#.###
;  #B#A#D#.#
;  #########

; step 2 D: 3 steps B: 4 steps
;#############
;#...B.....C.#
;###A#C#.#.###
;  #B#A#D#D#
;  #########

; step 3 D: 5 steps C: 5 + 4 steps
;#############
;#...B.......#
;###A#.#C#D###
;  #B#A#C#D#
;  #########

; step 4 A: 3 steps B: 3 steps
;#############
;#.....A.....#
;###A#.#C#D###
;  #B#B#C#D#
;  #########

; step 5 A: 2 steps B: 5 steps
;#############
;#.A...A.....#
;###.#B#C#D###
;  #.#B#C#D#
;  #########

; step 6 A: 3 + 4 steps
;#############
;#...........#
;###A#B#C#D###
;  #A#B#C#D#
;  #########

;overall
;D: 10
;C: 12
;B: 12
;A: 12
; 10000 + 1200 + 120 + 12 = 11332

(defn answer-for-part-1 []
  (+ (* 1000 10) (* 100 12) (* 10 12) 12))

;#############
;#...........#
;###A#C#B#D###
;  #D#C#B#A#
;  #D#B#A#C#
;  #B#A#D#C#
;  #########